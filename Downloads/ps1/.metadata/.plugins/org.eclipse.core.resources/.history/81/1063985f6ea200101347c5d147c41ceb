package twitter;

import static org.junit.Assert.*;
import java.time.Instant;
import java.util.Arrays;
import java.util.Collections;
import java.util.Set;
import org.junit.Test;

public class ExtractTest {

    private static final Instant d1 = Instant.parse("2020-02-17T10:00:00Z");
    private static final Instant d2 = Instant.parse("2020-02-17T11:00:00Z");
    private static final Instant d3 = Instant.parse("2020-02-17T12:30:00Z");

    private static final Tweet tweet1 = new Tweet(1, "alice", "Just a normal tweet", d1);
    private static final Tweet tweet2 = new Tweet(2, "bob", "Hey @Charlie, how are you?", d2);
    private static final Tweet tweet3 = new Tweet(3, "charlie", "Email me at test@mit.edu, not a mention.", d3);

    // ---------- Tests for getTimespan ----------

    @Test
    public void testGetTimespanSingleTweet() {
        Timespan timespan = Extract.getTimespan(Collections.singletonList(tweet1));
        assertEquals(d1, timespan.getStart());
        assertEquals(d1, timespan.getEnd());
    }

    @Test
    public void testGetTimespanMultipleTweets() {
        Timespan timespan = Extract.getTimespan(Arrays.asList(tweet1, tweet2, tweet3));
        assertEquals(d1, timespan.getStart());
        assertEquals(d3, timespan.getEnd());
    }

    @Test
    public void testGetTimespanEmptyList() {
        Timespan timespan = Extract.getTimespan(Collections.emptyList());
        assertNotNull(timespan.getStart());
        assertNotNull(timespan.getEnd());
    }

    // ---------- Tests for getMentionedUsers ----------

    @Test
    public void testGetMentionedUsersSingleMention() {
        Set<String> mentioned = Extract.getMentionedUsers(Collections.singletonList(tweet2));
        assertTrue(mentioned.contains("charlie"));
        assertEquals(1, mentioned.size());
    }

    @Test
    public void testGetMentionedUsersCaseInsensitive() {
        Tweet tweet = new Tweet(4, "alice", "@ALICE @alice @Bob", d2);
        Set<String> mentioned = Extract.getMentionedUsers(Collections.singletonList(tweet));
        assertTrue(mentioned.contains("alice"));
        assertTrue(mentioned.contains("bob"));
        assertEquals(2, mentioned.size());
    }

    @Test
    public void testGetMentionedUsersIgnoresEmail() {
        Set<String> mentioned = Extract.getMentionedUsers(Collections.singletonList(tweet3));
        assertTrue(mentioned.isEmpty());
    }

    @Test
    public void testGetMentionedUsersMultipleTweets() {
        Tweet tweet4 = new Tweet(5, "david", "Hey @Emma!", d3);
        Set<String> mentioned = Extract.getMentionedUsers(Arrays.asList(tweet2, tweet4));
        assertTrue(mentioned.contains("charlie"));
        assertTrue(mentioned.contains("emma"));
        assertEquals(2, mentioned.size());
    }
}
